jobs:
  - name: deprovision-preprod-ipam
    max_in_flight: 1
    plan:
      - get: dataworks-aws-ipam
        trigger: true
      - task: release-preprod-ipam
        config:
          platform: linux   
          image_resource:
            type: docker-image
            source:
              repository: ((dataworks.docker_awscli_repository))
              tag: 0.0.17
          params:
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci
            AWS_REGION: ((dataworks.aws_region))
            AWS_DEFAULT_REGION: ((dataworks.aws_region))
            ASSUME_DURATION: 3600                  
          run:
            path: sh
            args:
              - -exc
              - |
                source /assume-role
                IPAM_POOL_ID=$(aws ec2 describe-ipam-pools --filters Name=locale,Values=eu-west-2 | jq -r '.IpamPools | .[] | .IpamPoolId')
                PRIVATE_SCOPE_ID=$(aws ec2 describe-ipam-scopes | jq -r '.IpamScopes | .[]  | select(.IpamScopeType=="private") | .IpamScopeId')
                ALLOCATIONS_CIDR=$(aws ec2 get-ipam-pool-allocations --ipam-pool-id  $IPAM_POOL_ID | jq -r '.[] | .[]  | "\(.Cidr) \(.ResourceId)"')
                while IFS= read -r allocation; do \
                  resource_cidr=$(echo $allocation | cut -d' ' -f1)
                  resource_id=$(echo $allocation | cut -d' ' -f2)
                  aws ec2 modify-ipam-resource-cidr \
                    --resource-id $resource_id \
                    --resource-cidr $resource_cidr \
                    --resource-region $AWS_REGION \
                    --current-ipam-scope-id $PRIVATE_SCOPE_ID \
                    --no-monitored \
                    --no-dry-run 
                done < <(printf '%s\n' "$ALLOCATIONS_CIDR")

      - .: (( inject meta.plan.terraform-bootstrap ))
      - .: (( inject meta.plan.terraform-destroy ))
        params:
            TF_WORKSPACE: 'preprod'
      - .: (( inject meta.plan.terraform-plan ))
        params:
            TF_WORKSPACE: 'preprod'
